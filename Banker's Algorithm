#include <iostream>
using namespace std;

int main()
{
    
    int processes, resources;
    int i, j, k;
    int c=0;
    
    processes=5;
    resources=3;
    
    int allocation[5][3]={ {0,0,1}, {1,3,3}, {1,3,5}, {0,6,3}, {1,0,0} };
    
    int max[5][3]={ {0,0,1}, {1,7,5}, {2,3,5}, {0,6,5}, {2,5,6} };
    
    int available[3]={1,5,2};
    
    int f[processes], ans[processes], ind=0;
    for(k=0; k<processes; k++){
        f[k]=0;
    }
    int need[processes][resources];
    for(i=0; i<processes; i++){
        for(j=0; j<resources; j++){
            need[i][j]=max[i][j]-allocation[i][j];
        }
    }
    int y=0;
    for(k=0; k<5; k++){
        for(i=0; i<processes; i++){
            if(f[i]==0){
                int flag=0;
                for(j=0; j<resources; j++){
                    if(need[i][j]>available[j]){
                        flag=1;
                    }
                    break;
                }
                
                if(flag==0){
                    ans[ind++]=i;
                    for(y=0; y<resources; y++){
                        available[y]+=allocation[i][y];
                        f[i]=1;
                    }
                }
            }
        }
    }
    
    cout<<"Safe Sequence: ";
    for(i=0; i<processes-1; i++){
        cout<<"P"<<ans[i]<<"->";
    }
    cout<<"P"<<ans[processes-1]<<endl;
    return 0;
}
